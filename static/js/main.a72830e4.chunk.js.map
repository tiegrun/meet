{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","App.js","reportWebVitals.js","index.js"],"names":["Event","Component","EventList","events","this","props","className","map","event","id","CitySearch","handleInputChanged","value","target","suggestions","locations","filter","location","toUpperCase","indexOf","setState","query","handleItemClicked","suggestion","state","type","onChange","onClick","NumberOfEvents","numberOfEvents","infoText","updateEvents","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAsEeA,G,6KAHX,OAAO,4B,GAFSC,cC/CLC,E,uKAdH,IACAC,EAAWC,KAAKC,MAAhBF,OACR,OACE,oBAAIG,UAAU,YAAd,SACGH,EAAOI,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,EAAD,CAAOA,MAAOA,KADPA,EAAMC,a,GANDR,aCyDTS,E,kDAxDb,aAAe,IAAD,8BACZ,gBAaFC,mBAAqB,SAACH,GACpB,IAAMI,EAAQJ,EAAMK,OAAOD,MACrBE,EAAc,EAAKT,MAAMU,UAAUC,QAAO,SAACC,GAC/C,OAAOA,EAASC,cAAcC,QAAQP,EAAMM,gBAAkB,KAEhE,EAAKE,SAAS,CACZC,MAAOT,EACPE,iBArBU,EAyBdQ,kBAAoB,SAACC,GACnB,EAAKH,SAAS,CACZC,MAAOE,KAxBT,EAAKC,MAAQ,CACXH,MAAO,SACPP,YAAa,IALH,E,qDA+BJ,IAAD,OACP,OACE,sBAAKR,UAAU,aAAf,UACE,uBACEmB,KAAK,OACLnB,UAAU,OACVM,MAAOR,KAAKoB,MAAMH,MAClBK,SAAUtB,KAAKO,qBAEjB,qBAAIL,UAAU,cAAd,UACGF,KAAKoB,MAAMV,YAAYP,KAAI,SAACgB,GAAD,OAC1B,oBAEEI,QAAS,kBAAM,EAAKL,kBAAkBC,IAFxC,SAGEA,GAFKA,MAIT,6BACE,2D,GAlDatB,aCoCV2B,E,4MAlCbJ,MAAQ,CACNK,eAAgB,EAChBC,SAAU,I,EAGZnB,mBAAqB,SAACH,GACpB,IAAMI,EAAQJ,EAAMK,OAAOD,MAC3B,EAAKQ,SAAS,CAAES,eAAgBjB,IAChC,EAAKP,MAAM0B,aAAa,KAAM,KAAMnB,GAEhCA,EAAQ,EACV,EAAKQ,SAAS,CACZU,SAAU,gCAGZ,EAAKV,SAAS,CACZU,SAAU,M,uDAOd,OACE,sBAAKxB,UAAU,iBAAf,UACE,uDACA,uBAAOmB,KAAK,OAAOhB,GAAG,wBAAwBG,MAAOR,KAAKoB,MAAMK,eAC9DH,SAAUtB,KAAKO,4B,GA7BIV,aCgBd+B,E,uKAVX,OACE,sBAAK1B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GANUL,aCMHgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a72830e4.chunk.js","sourcesContent":["// import React, { Component } from \"react\";\r\n\r\n\r\n// class Event extends Component {\r\n\r\n//   constructor() {\r\n//     super();\r\n \r\n//     this.state = {\r\n//       showDetails: false,\r\n//       query: 'Munich',\r\n//       suggestions: []\r\n//     }\r\n//   }\r\n\r\n//   handleShowDetails = () => {\r\n\r\n//     if (this.state.showDetails === false) {\r\n//       this.setState({ showDetails: true });\r\n//     } else {\r\n//       this.setState({ showDetails: false });\r\n//     }\r\n\r\n//   };\r\n\r\n//   render() {\r\n    \r\n//     const EventItem = this.props.events.map(((item)=>{\r\n//       [item.summary].join(\" \");\r\n//       return item.summary;\r\n//     }));\r\n\r\n//     const EventDescript = this.props.events.map(((item)=>{\r\n//       [item.description].join(\" \");\r\n//       return item.description;\r\n//     }))\r\n\r\n\r\n//     return (\r\n//       <div className=\"event\">\r\n//         <div className=\"eventOverview\">\r\n//           <p className=\"eventName\">\r\n//             {EventItem}\r\n//           </p>         \r\n//           <button className=\"detailsBtn\" onClick={() => this.handleShowDetails()}>\r\n//             show details\r\n//           </button>\r\n//         </div>\r\n\r\n//         {this.state.showDetails && (\r\n//           <div className=\"eventDetails\">\r\n//             <p className=\"eventDetailsDescription\">\r\n//               {EventDescript}\r\n//             </p>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Event;\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n \r\n    this.state = {\r\n      query: 'Munich',\r\n      suggestions: []\r\n    }\r\n  }\r\n\r\n  // handleInputChanged = (event) => {\r\n  //   const value = event.target.value;\r\n  //   this.setState({ query: value });\r\n  // }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ul className=\"suggestions\">\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >{suggestion}</li>\r\n          ))}\r\n          <li>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state = {\r\n    numberOfEvents: 2,\r\n    infoText: ''\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ numberOfEvents: value });\r\n    this.props.updateEvents(null, null, value);\r\n\r\n    if (value < 1) {\r\n      this.setState({\r\n        infoText: 'Number must be 1 or greater'\r\n      });\r\n    } else {\r\n      this.setState({\r\n        infoText: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return(\r\n      <div className=\"numberOfEvents\">\r\n        <label>Number of Events: </label>\r\n        <input type=\"text\" id=\"numberOfEvents__input\" value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch />\n        <EventList />\n        <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}