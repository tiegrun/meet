{"version":3,"sources":["mock-data.js","Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","App.js","reportWebVitals.js","index.js"],"names":["mockData","Event","handleShowDetails","state","showDetails","setState","eventMakeArray","Object","values","eventExample","map","item","summary","join","find","x","id","description","location","timeZone","start","startDateTime","dateTime","className","onClick","this","Component","EventList","events","props","event","CitySearch","handleInputChanged","value","target","suggestions","locations","filter","toUpperCase","indexOf","query","handleItemClicked","suggestion","type","onChange","NumberOfEvents","numberOfEvents","infoText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2d4631b.chunk.js","sourcesContent":["const mockData = [\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"organizer\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"start\": {\r\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n     \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n     \"useDefault\": true\r\n    }\r\n   },\r\n   {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"organizer\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"start\": {\r\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n     \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n     \"useDefault\": true\r\n    }\r\n   }\r\n]\r\n\r\nexport { mockData };","import React, { Component } from \"react\";\r\nimport { mockData } from './mock-data';\r\n\r\nclass Event extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n \r\n    this.state = {\r\n      showDetails: false,\r\n      \r\n    }\r\n  }\r\n\r\n  handleShowDetails = () => {\r\n\r\n    if (this.state.showDetails === false) {\r\n      this.setState({ showDetails: true });\r\n    } \r\n    else {\r\n      this.setState({ showDetails: false });\r\n    }\r\n\r\n  };\r\n\r\n  render() {\r\n  \r\n    const eventMakeArray = (Object.values({ mockData }))[0];\r\n    \r\n    const allEventNames = eventMakeArray.map((item) => {\r\n      [item.summary].join(\" \");\r\n      return item.summary;\r\n    })\r\n\r\n    const eventExample = eventMakeArray.find(x => x.id === '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z').summary;\r\n\r\n    const description = eventMakeArray.map((item) => {\r\n      [item.description].join(\" \");\r\n      return item.description;\r\n    })\r\n\r\n    const location = eventMakeArray.map((item) => {\r\n      [item.location].join(\" \");\r\n      return item.location;\r\n    })\r\n\r\n    const timeZone = eventMakeArray.map((item) => {\r\n      [item.start].join(\" \");\r\n      return item.start.timeZone;\r\n    })   \r\n    \r\n    const startDateTime = eventMakeArray.map((item) => {\r\n      [item.start].join(\" \");\r\n      return item.start.dateTime;\r\n    }) \r\n\r\n    // const eventName = allEventNames.map((singleEvent) =>\r\n    //   <li key={singleEvent}>\r\n    //     {singleEvent}\r\n    //     <button className=\"detailsBtn\" onClick={() => this.handleShowDetails()}>\r\n    //       show details\r\n    //     </button>\r\n    //    </li>\r\n    // );\r\n\r\n    return (\r\n      <div className=\"event\">\r\n        <div className=\"eventOverview\">\r\n          <ul className=\"eventName\">\r\n            <li>\r\n              {eventExample}\r\n              <button className=\"detailsBtn\" onClick={() => this.handleShowDetails()}>\r\n                show details\r\n              </button>\r\n            </li>\r\n            {/* {eventExample}\r\n            <button className=\"detailsBtn\" onClick={() => this.handleShowDetails()}>\r\n          show details\r\n        </button> */}\r\n            <li>\r\n              {this.state.showDetails && (\r\n                <div className=\"eventDetails\">\r\n                  <p className=\"eventDetailsDescription\">\r\n                    {/* {EventDescript} */}\r\n                    Description - {description}\r\n                    <br></br>\r\n                    <br></br>\r\n                      Location - {location}\r\n                    <br></br>\r\n                    <br></br>\r\n                      Time Zone - {timeZone}\r\n                    <br></br>\r\n                    <br></br>\r\n                    Start Date - {startDateTime}\r\n                  </p>\r\n                </div>\r\n              )}\r\n              <hr></hr>\r\n            </li>\r\n          </ul>         \r\n        </div> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    \r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n \r\n    this.state = {\r\n      query: '',\r\n      suggestions: []\r\n    }\r\n  }\r\n\r\n  // handleInputChanged = (event) => {\r\n  //   const value = event.target.value;\r\n  //   this.setState({ query: value });\r\n  // }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ul className=\"suggestions\">\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >{suggestion}</li>\r\n          ))}\r\n          <li>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state = {\r\n    numberOfEvents: 2,\r\n    infoText: ''\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ numberOfEvents: value });\r\n    // this.props.updateEvents(null, null, value);\r\n  }\r\n\r\n  render() {\r\n\r\n    return(\r\n      <div className=\"numberOfEvents\">\r\n        <label>Number of Events: </label>\r\n        <input type=\"text\" id=\"numberOfEvents__input\" value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { mockData } from './mock-data';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n \n    this.state = {\n      events: (Object.values({ mockData }))[0]\n      \n    }\n  }\n\n  // componentDidMount(){\n\n  // }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch/>\n        <EventList events={this.state.events}/>\n        <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}