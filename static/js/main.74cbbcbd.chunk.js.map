{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","infoEvent","this","props","event","className","summary","location","onClick","description","start","dateTime","end","timeZone","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","numberOfEvents","type","onChange","onFocus","display","NumberOfEvents","eventCount","errorText","parseInt","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","href","startsWith","done","navigator","onLine","localStorage","getItem","JSON","parse","getAccessToken","token","removeQuery","url","axios","get","data","setItem","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","locationEvents","eventsByCount","slice","locationEventsByCount","showStatus","online","connectionStatus","document","querySelector","innerText","background","mounted","showEvents","addEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","atatus","install","URL","process","origin","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.74cbbcbd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './Event.css';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    showDetails: false,\r\n  };\r\n\r\n  handleShowDetails = () => {\r\n    if (this.state.showDetails === false) {\r\n      this.setState({ showDetails: true });\r\n    } else {\r\n      this.setState({ showDetails: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    \r\n    const infoEvent = this.props.event\r\n    \r\n    return (\r\n      \r\n      <div className=\"event\">\r\n        <div className=\"eventOverview\">\r\n          <p className=\"eventName\">\r\n            Event Name - {infoEvent.summary}\r\n            <br></br>\r\n            City  - {infoEvent.location}\r\n          </p>\r\n          <button className=\"detailsBtn\"onClick={() => this.handleShowDetails()}>\r\n            show details\r\n          </button>\r\n        </div>\r\n        {this.state.showDetails && (\r\n          <div className=\"eventDetails\">\r\n            <p className=\"eventDetailsDescription\">\r\n              {infoEvent.description}\r\n            </p>\r\n            <p className=\"eventDateTime\">\r\n              Start Time - {infoEvent.start.dateTime}\r\n              <br></br>\r\n              End Time - {infoEvent.end.dateTime}\r\n            </p>\r\n            <p className=\"eventTimeZone\">\r\n              Time Zone - {infoEvent.start.timeZone}\r\n            </p>\r\n            <hr></hr>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\nimport './EventList.css';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    \r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert };","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: false,\r\n    infoText:''\r\n  }\r\n\r\n  // handleInputChanged = (event) => {\r\n  //   const value = event.target.value;\r\n  //   const suggestions = this.props.locations.filter((location) => {\r\n  //     return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n  //   });\r\n  //   this.setState({\r\n  //     query: value,\r\n  //     suggestions,\r\n  //   });\r\n  // };\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({showSuggestions:true});\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        infoText: 'We can not find the city you are looking for. Please try another city',\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText:''\r\n      });\r\n    }\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n  \r\n    this.props.updateEvents(suggestion, this.props.numberOfEvents);\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <InfoAlert text={this.state.infoText} />\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >{suggestion}</li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state = {\r\n    eventCount:  32,\r\n    errorText:''\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n\r\n    if(parseInt(event.target.value)){\r\n      \r\n      const value = parseInt(event.target.value);\r\n    \r\n      if(value >= 1  && value <= 250){\r\n        this.setState({ \r\n          eventCount: value,\r\n          errorText:''\r\n        });\r\n\r\n      }\r\n      else{\r\n        // alert(\"please enter a valid number between 0 and 250\");\r\n        this.setState({\r\n          eventCount: value,\r\n          errorText: 'please enter a valid number between 1 and 250',\r\n        });\r\n      }\r\n\r\n      this.props.updateEvents(this.props.locations, value);\r\n\r\n   }\r\n    else{\r\n\r\n      this.setState({ \r\n        eventCount: \"\",\r\n        errorText: 'please enter a valid number between 1 and 250'\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    return(\r\n      <div className=\"numberOfEvents\">\r\n        <ErrorAlert text={this.state.errorText} />\r\n        <label>Number of Events: </label>\r\n        <input type=\"text\" id=\"numberOfEventsInput\" value={this.state.eventCount} onChange={this.handleInputChanged}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockData = [\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"organizer\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"start\": {\r\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n     \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n     \"useDefault\": true\r\n    }\r\n   },\r\n   {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"organizer\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"start\": {\r\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n     \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n     \"useDefault\": true\r\n    }\r\n   }\r\n]\r\n\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  if (!navigator.onLine) {\r\n    const events = localStorage.getItem(\"lastEvents\");\r\n    NProgress.done();\r\n    return { events: JSON.parse(events).events, locations:   extractLocations(JSON.parse(events).events) };\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `https://923art64i6.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}`;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\nconst tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\nif (!accessToken || tokenCheck.error) {\r\n  await localStorage.removeItem(\"access_token\");\r\n  const searchParams = new URLSearchParams(window.location.search);\r\n  const code = await searchParams.get(\"code\");\r\n  if (!code) {\r\n    const results = await axios.get(\r\n      \"https://923art64i6.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\r\n    );\r\n    const { authUrl } = results.data;\r\n    return (window.location.href = authUrl);\r\n  }\r\n  return code && getToken(code);\r\n}\r\nreturn accessToken;\r\n}\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://923art64i6.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\n// import { mockData } from './mock-data';\nimport { extractLocations, getEvents } from './api';\nimport \"./nprogress.css\";\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    // events: (Object.values({ mockData }))[0]\n    locations: [],\n    numberOfEvents: 32\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    getEvents().then((events) => {\n\n      const showEvents = events.slice(0, this.state.numberOfEvents)\n      \n      if (this.mounted) {\n\n        this.setState({ \n          events: showEvents, \n          locations: extractLocations(events),\n        });\n        // console.log(this.events);\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location, eventCount) => {\n    \n    getEvents().then((events) => {\n      \n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n\n      const eventsByCount = events.slice(0, eventCount);  \n      \n        if(locationEvents === events){\n\n          this.setState({\n          events: eventsByCount,\n         \n          numberOfEvents: eventCount\n        })\n\n        }\n         else if(locationEvents.length === 0){\n\n          this.setState({\n            events: eventsByCount,\n           \n            numberOfEvents: eventCount\n          })\n\n         }\n       \n       else {\n        const locationEventsByCount = locationEvents.slice(0, eventCount); \n        this.setState({\n          events: locationEventsByCount,\n          \n          numberOfEvents: eventCount\n        })\n       }\n    });\n  }\n\n   showStatus = (online) => {\n\n    const connectionStatus = document.querySelector('#connectionStatus');\n  \n    if (online) {\n      connectionStatus.innerText = `You're online ! 😄`;\n      connectionStatus.style.background = \"green\";\n      connectionStatus.style.color = \"white\";\n    } \n    else {\n      connectionStatus.innerText = `You are offline, please connect to the Internet to get updated events !!! 😢`;\n      connectionStatus.style.background = \"red\";\n      connectionStatus.style.color = \"white\";\n    }\n  }\n  \n  render() {\n    window.addEventListener('load', () => {\n      // 1st, we set the correct status when the page loads\n      navigator.onLine ? this.showStatus(true) : this.showStatus(false);\n    \n      // now we listen for network status changes\n      window.addEventListener('online', () => {\n        this.showStatus(true);\n      });\n    \n      window.addEventListener('offline', () => {\n        this.showStatus(false);\n      });\n    });\n    \n    return (\n      <div className=\"App\">\n        <div id=\"connectionStatus\"></div>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} numberOfEvents={this.state.numberOfEvents} />\n        <EventList events={this.state.events}/>\n        <NumberOfEvents updateEvents={this.updateEvents} locations={this.state.locations}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      // const swUrl = \"src/service-worker.js\";\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\natatus.config('d40143fef1e445ff94524e2f7f1cc402').install();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nserviceWorkerRegistration.register();\n\n// atatus.notify(new Error('Test Atatus Setup'));\nreportWebVitals();\n"],"sourceRoot":""}